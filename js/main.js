// 순물공: 공격력(웨폰 코어 제외)
// 총물공: 총 물리 공격력(%)
// 물공: 순물공 * (1 + 총물공/100) + 웨폰코어 공격력

const 물리 = "물리";
const 마법 = "마법";
const 하이브리드 = "하이브리드";
const 캐릭터_데이터 = {
    이세하: {타입: 물리, 계수: 0.05},
    제이: {타입: 물리, 계수: 0.02},
    나타: {타입: 물리, 계수: 0.015},
    하피: {타입: 물리, 계수: 0.015},
    티나: {타입: 물리, 계수: 0.03},
    루나: {타입: 물리, 계수: 0.04},
    소마: {타입: 물리, 계수: 0.04},
    미래: {타입: 물리, 계수: 0.04},
    이슬비: {타입: 마법, 계수: 0.05},
    미스틸테인: {타입: 마법, 계수: 0.05},
    레비아: {타입: 마법, 계수: 0.025},
    볼프강: {타입: 마법, 계수: 0.05},
    세트: {타입: 마법, 계수: 0.03},
    은하: {타입: 마법, 계수: 0.04},
    서유리: {타입: 하이브리드, 계수: 0.08},
    바이올렛: {타입: 하이브리드, 계수: 0.34},
    파이: {타입: 하이브리드, 계수: 0.33},
    김철수: {타입: 하이브리드, 계수: 0.33},
    루시: {타입: 하이브리드, 계수: 0.33}
}
function 숫자콤마(x) {
    return x.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function 소수점두자리콤마(x) {
    return x.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function 곱연산(){ // 0 <= arg <= 100, 0 <= ret <= 100
    let 곱 = 1;
    for (val of arguments){
        곱 *= (1 - val / 100);
    }
    return (1 - 곱) * 100;
}
const app = new Vue({
    el: "#app",
    data (){
        return{
            캐릭터: "이세하",

            하락한물공퍼센트: 100,
            하락한물공: 0,
            하락한마공퍼센트: 100,
            하락한마공: 0,

            코어공격력: 0,
            공속: 0,
            물공: 0,
            마공: 0,
            물치피: 0,
            마치피: 0,
            위개뎀: 0,
            에피증: 0,
            백피증: 0,
            체피증: 0,
            에치피: 0,
            백치피: 0,
            체치피: 0,
            쿨감: 0,

            물공변화량: 0,
            마공변화량: 0,
            총물공변화량: 0,
            총마공변화량: 0,
            물치피변화량: 0,
            마치피변화량: 0,
            조건부치피변화량: 0,
            위개뎀변화량: 0,
            에피증변화량: 0,
            백피증변화량: 0,
            체피증변화량: 0,
            공속변화량: 0,
            쿨감변화량: 0,

            타입피증: 0,
            주는피해량: 0,
            주는물리피해량: 0,
            주는마법피해량: 0,
            받는피해량: 0,
            뎀감: 0,
            치피감: 0,
            스킬계수: 100,

            값1: 0,
            값2: 0,
            값3: 0,
            값4: 0,
            값5: 0
        }
    },
    methods: {
        물리종합전투력계산(스탯, 캐릭터){
            const 공속 = 스탯.공속 || 0;
            const 물공 = 스탯.물공 || 0;
            const 물치피 = 스탯.물치피 || 0;
            const 에치피 = 스탯.에치피 || 0;
            const 백치피 = 스탯.백치피 || 0;
            const 체치피 = 스탯.체치피 || 0;
            const 위개뎀 = 스탯.위개뎀 || 0;
            const 에피증 = 스탯.에피증 || 0;
            const 백피증 = 스탯.백피증 || 0;
            const 체피증 = 스탯.체피증 || 0;
            const 쿨감 = 스탯.쿨감 || 0;
            const 캐릭터계수 = 캐릭터_데이터[캐릭터].계수;
            const 보정합치피 = 물치피 / 100 * (1 + 캐릭터계수) + 에치피 / 100 + 백치피 / 100 + 체치피 / 100;
            const 방관보정계수 = (보정합치피 / (1 + 보정합치피) / 8 + 1);
            return 물공 * 
                (1 + 공속 / 1000) * 
                (1 + (쿨감 > 40 ? 40 : 쿨감) / 100) * 
                (1 + 보정합치피) * 
                (1 + 위개뎀 / 100 + 에피증 / 100 + 백피증 / 100 + 체피증 / 100) * 
                방관보정계수 * 
                (1 + 캐릭터계수);
        },
        마법종합전투력계산(스탯, 캐릭터){
            const 공속 = 스탯.공속 || 0;
            const 마공 = 스탯.마공 || 0;
            const 마치피 = 스탯.마치피 || 0;
            const 에치피 = 스탯.에치피 || 0;
            const 백치피 = 스탯.백치피 || 0;
            const 체치피 = 스탯.체치피 || 0;
            const 위개뎀 = 스탯.위개뎀 || 0;
            const 에피증 = 스탯.에피증 || 0;
            const 백피증 = 스탯.백피증 || 0;
            const 체피증 = 스탯.체피증 || 0;
            const 쿨감 = 스탯.쿨감 || 0;
            const 캐릭터계수 = 캐릭터_데이터[캐릭터].계수;
            const 보정합치피 = 마치피 / 100 * (1 + 캐릭터계수) + 에치피 / 100 + 백치피 / 100 + 체치피 / 100;
            const 방관보정계수 = (보정합치피 / (1 + 보정합치피) / 8 + 1)
            return 마공 * 
                (1 + 공속 / 1000) * 
                (1 + (쿨감 > 40 ? 40 : 쿨감) / 100) * 
                (1 + 보정합치피) * 
                (1 + 위개뎀 / 100 + 에피증 / 100 + 백피증 / 100 + 체피증 / 100) * 
                방관보정계수 * 
                (1 + 캐릭터계수);
        },
        하이브리드종합전투력계산(스탯, 캐릭터){
            return (this.물리종합전투력계산(스탯, 캐릭터) + this.마법종합전투력계산(스탯, 캐릭터)) / 2;
        },
        물리던전종합전투력계산(치피감, 타입피증){
            const 캐릭터계수 = 캐릭터_데이터[this.캐릭터].계수;
            const 보정합치피 = (this.물치피 / 100) * (1 + 캐릭터계수) + 
                (this.에치피 / 100) + (this.백치피 / 100) + (this.체치피 / 100) - (치피감 / 100);
            const 방관보정계수 = (보정합치피 / (1 + 보정합치피) / 8 + 1);
            return this.물공 * 
                (1 + this.공속 / 1000) * 
                (1 + (this.쿨감 > 40 ? 40 : this.쿨감) / 100) * 
                (1 + 보정합치피) * 
                (1 + (this.위개뎀 / 100) + (this.에피증 / 100) + (this.백피증 / 100) + (this.체피증 / 100) + (타입피증 / 100)) * 
                방관보정계수 * 
                (1 + 캐릭터계수);
        },
        마법던전종합전투력계산(치피감, 타입피증){
            const 캐릭터계수 = 캐릭터_데이터[this.캐릭터].계수;
            const 보정합치피 = (this.마치피 / 100) * (1 + 캐릭터계수) + 
                (this.에치피 / 100) + (this.백치피 / 100) + (this.체치피 / 100) - (치피감 / 100);
            const 방관보정계수 = (보정합치피 / (1 + 보정합치피) / 8 + 1)
            return this.마공 * 
                (1 + this.공속 / 1000) * 
                (1 + (this.쿨감 > 40 ? 40 : this.쿨감) / 100) * 
                (1 + 보정합치피) * 
                (1 + (this.위개뎀 / 100) + (this.에피증 / 100) + (this.백피증 / 100) + (this.체피증 / 100) + (타입피증 / 100)) * 
                방관보정계수 * 
                (1 + 캐릭터계수);
        },
        하이브리드던전종합전투력계산(치피감, 타입피증){
            return (this.물리던전종합전투력계산(치피감, 타입피증) + this.마법던전종합전투력계산(치피감, 타입피증)) / 2;
        },

        현재물리종전(){
            return this.물리종합전투력계산({
                공속: this.공속 || 0,
                물공: this.물공 || 0,
                마공: this.마공 || 0,
                물치피: this.물치피 || 0,
                마치피: this.마치피 || 0,
                위개뎀: this.위개뎀 || 0,
                에피증: this.에피증 || 0,
                백피증: this.백피증 || 0,
                체피증: this.체피증 || 0,
                에치피: this.에치피 || 0,
                백치피: this.백치피 || 0,
                체치피: this.체치피 || 0,
                쿨감: this.쿨감 || 0
            }, this.캐릭터);
        },
        현재마법종전(){
            return this.마법종합전투력계산({
                공속: this.공속 || 0,
                물공: this.물공 || 0,
                마공: this.마공 || 0,
                물치피: this.물치피 || 0,
                마치피: this.마치피 || 0,
                위개뎀: this.위개뎀 || 0,
                에피증: this.에피증 || 0,
                백피증: this.백피증 || 0,
                체피증: this.체피증 || 0,
                에치피: this.에치피 || 0,
                백치피: this.백치피 || 0,
                체치피: this.체치피 || 0,
                쿨감: this.쿨감 || 0
            }, this.캐릭터);
        },
        현재하이브리드종전(){
            return this.하이브리드종합전투력계산({
                공속: this.공속,
                물공: this.물공,
                마공: this.마공,
                물치피: this.물치피,
                마치피: this.마치피,
                위개뎀: this.위개뎀,
                에피증: this.에피증,
                백피증: this.백피증,
                체피증: this.체피증,
                에치피: this.에치피,
                백치피: this.백치피,
                체치피: this.체치피,
                쿨감: this.쿨감
            }, this.캐릭터);
        },

        물리종전변화계산(스탯변화량){
            const 순물공 = this.순수물리공격력계산().순물공;
            const 총물공 = this.순수물리공격력계산().총물공;
            const 공속 = this.공속 || 0;
            const 코어공격력 = this.코어공격력 || 0;
            const 물공 = this.물공 || 0;
            const 마공 = this.마공 || 0;
            const 물치피 = this.물치피 || 0;
            const 마치피 = this.마치피 || 0;
            const 위개뎀 = this.위개뎀 || 0;
            const 에피증 = this.에피증 || 0;
            const 백피증 = this.백피증 || 0;
            const 체피증 = this.체피증 || 0;
            const 에치피 = this.에치피 || 0;
            const 백치피 = this.백치피 || 0;
            const 체치피 = this.체치피 || 0;
            const 쿨감 = this.쿨감 || 0;

            const 스탯변화량_공속 = 스탯변화량.공속 || 0;
            const 스탯변화량_물공 = 스탯변화량.물공 || 0;
            const 스탯변화량_총물공 = 스탯변화량.총물공 || 0;
            const 스탯변화량_물치피 = 스탯변화량.물치피 || 0;
            const 스탯변화량_위개뎀 = 스탯변화량.위개뎀 || 0;
            const 스탯변화량_에피증 = 스탯변화량.에피증 || 0;
            const 스탯변화량_백피증 = 스탯변화량.백피증 || 0;
            const 스탯변화량_체피증 = 스탯변화량.체피증 || 0;
            const 스탯변화량_에치피 = 스탯변화량.에치피 || 0;
            const 스탯변화량_백치피 = 스탯변화량.백치피 || 0;
            const 스탯변화량_체치피 = 스탯변화량.체치피 || 0;
            const 스탯변화량_쿨감 = 스탯변화량.쿨감 || 0;

            const 캐릭터 = this.캐릭터;


            const 기존종전 = this.물리종합전투력계산({
                공속: 공속,
                물공: 물공,
                마공: 마공,
                물치피: 물치피,
                마치피: 마치피,
                위개뎀: 위개뎀,
                에피증: 에피증,
                백피증: 백피증,
                체피증: 체피증,
                에치피: 에치피,
                백치피: 백치피,
                체치피: 체치피,
                쿨감: 쿨감
            }, 캐릭터);
            let 변화한종전 = 0;
            if (캐릭터 === "이세하"){
                // [위상력 개방 시 피해량 증가] 스탯의 25% 만큼 [물리 치명타 피해량]이 증가하고 
                // 15% 만큼 [에어리얼 시 치명타 피해량]과 [백어택 시 치명타 피해량]이 증가한다.
                const 위개뎀변화량 = 곱연산(위개뎀, 스탯변화량_위개뎀) - 위개뎀;
                변화한종전 = this.물리종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 마공,
                    물치피: 물치피 + 스탯변화량_물치피 + 위개뎀변화량 * 0.25,
                    마치피: 마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피 + 위개뎀변화량 * 0.15,
                    백치피: 백치피 + 스탯변화량_백치피 + 위개뎀변화량 * 0.15,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터)
            } else if (캐릭터 === "나타"){
                // 백어택 시 피해량 증가 스탯의 30% 만큼 물리 치명타 피해량,
                // 에어리얼 시 치명타 피해량, 백어택 시 치명타 피해량이 증가한다.
                const 백피증변화량 = 곱연산(백피증, 스탯변화량_백피증) - 백피증;
                변화한종전 = this.물리종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 마공,
                    물치피: 물치피 + 스탯변화량_물치피 + 백피증변화량 * 0.3,
                    마치피: 마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피 + 백피증변화량 * 0.3,
                    백치피: 백치피 + 스탯변화량_백치피 + 백피증변화량 * 0.3,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);
            } else if (캐릭터 === "하피"){
                // 에어리얼 시 피해량 증가 능력치의 30%가 물리 치명타 피해량에,
                // 에어리얼 시 피해량 증가 능력치의 15%가 백어택 시 피해량 증가에 추가되며, 
                // 위상력 개방 시 피해량 증가 능력치의 15%가 에어리얼 시 치명타 피해량에 추가된다.
                const 패시브전백피증 = 백피증 - 에피증 * 0.15;
                const 에피증변화량 = (곱연산(에피증, 스탯변화량_에피증) - 에피증);
                const 위개뎀변화량 = 곱연산(위개뎀, 스탯변화량_위개뎀) - 위개뎀;
                변화한종전 = this.물리종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 마공,
                    물치피: 물치피 + 스탯변화량_물치피 + 에피증변화량 * 0.3,
                    마치피: 마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(패시브전백피증, 스탯변화량_백피증) + 에피증변화량 * 0.15 + 에피증 * 0.15,
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피 + 위개뎀변화량 * 0.15,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);    
            } else if (캐릭터 === "티나"){
                // 체이스 시 피해량 증가 스탯의 25%만큼 물리 치명타 피해량, 백어택 시 치명타 피해량이 증가하고
                // 위상력 개방 시 대미지 증가 스탯의 25%만큼 체이스 시 치명타 피해량이 증가한다.
                const 체피증변화량 = 곱연산(체피증, 스탯변화량_체피증) - 체피증;
                const 위개뎀변화량 = 곱연산(위개뎀, 스탯변화량_위개뎀) - 위개뎀;
                변화한종전 = this.물리종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 마공,
                    물치피: 물치피 + 스탯변화량_물치피 + 체피증변화량 * 0.25,
                    마치피: 마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피 + 체피증변화량 * 0.25,
                    체치피: 체치피 + 위개뎀변화량 * 0.25,
                    쿨감: 쿨감
                }, 캐릭터)
            } else {
                변화한종전 = this.물리종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 마공,
                    물치피: 물치피 + 스탯변화량_물치피,
                    마치피: 마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터)
            }
            return 변화한종전 - 기존종전;
        },
        마법종전변화계산(스탯변화량){
            const 순마공 = this.순수마법공격력계산().순마공;
            const 총마공 = this.순수마법공격력계산().총마공;
            const 공속 = this.공속 || 0;
            const 코어공격력 = this.코어공격력 || 0;
            const 물공 = this.물공 || 0;
            const 마공 = this.마공 || 0;
            const 물치피 = this.물치피 || 0;
            const 마치피 = this.마치피 || 0;
            const 위개뎀 = this.위개뎀 || 0;
            const 에피증 = this.에피증 || 0;
            const 백피증 = this.백피증 || 0;
            const 체피증 = this.체피증 || 0;
            const 에치피 = this.에치피 || 0;
            const 백치피 = this.백치피 || 0;
            const 체치피 = this.체치피 || 0;
            const 쿨감 = this.쿨감 || 0;
            const 캐릭터 = this.캐릭터;

            const 스탯변화량_공속 = 스탯변화량.공속 || 0;
            const 스탯변화량_마공 = 스탯변화량.마공 || 0;
            const 스탯변화량_총마공 = 스탯변화량.총마공 || 0;
            const 스탯변화량_마치피 = 스탯변화량.마치피 || 0;
            const 스탯변화량_위개뎀 = 스탯변화량.위개뎀 || 0;
            const 스탯변화량_에피증 = 스탯변화량.에피증 || 0;
            const 스탯변화량_백피증 = 스탯변화량.백피증 || 0;
            const 스탯변화량_체피증 = 스탯변화량.체피증 || 0;
            const 스탯변화량_에치피 = 스탯변화량.에치피 || 0;
            const 스탯변화량_백치피 = 스탯변화량.백치피 || 0;
            const 스탯변화량_체치피 = 스탯변화량.체치피 || 0;
            const 스탯변화량_쿨감 = 스탯변화량.쿨감 || 0;

            const 기존종전 = this.마법종합전투력계산({
                공속: 공속,
                물공: 물공,
                마공: 마공,
                물치피: 물치피,
                마치피: 마치피,
                위개뎀: 위개뎀,
                에피증: 에피증,
                백피증: 백피증,
                체피증: 체피증,
                에치피: 에치피,
                백치피: 백치피,
                체치피: 체치피,
                쿨감: 쿨감
            }, 캐릭터);
            let 변화한종전 = 0;
            if (캐릭터 === "레비아"){
                // 위상력 개방 시 대미지 증가 스탯의 50%만큼 마법 치명타 피해량이 상승하고
                // 15%만큼 에어리얼 시 피해량이 증가한다.
                const 위개뎀변화량 = 곱연산(위개뎀, 스탯변화량_위개뎀) - 위개뎀;
                const 패시브전에피증 = 에피증 - 위개뎀 * 0.15;

                변화한종전 = this.마법종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 물공,
                    마공: 코어공격력 + (순마공 + 스탯변화량_마공) * (1 + (총마공 + 스탯변화량_총마공) / 100),
                    물치피: 물치피,
                    마치피: 마치피 + 스탯변화량_마치피 + 위개뎀변화량 * 0.5,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(패시브전에피증, 스탯변화량_에피증) + 위개뎀변화량 * 0.15 + 위개뎀 * 0.15,
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);
            } else {
                변화한종전 = this.마법종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 물공,
                    마공: 코어공격력 + (순마공 + 스탯변화량_마공) * (1 + (총마공 + 스탯변화량_총마공) / 100),
                    물치피: 물치피,
                    마치피: 마치피 + 스탯변화량_마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);
            }
            return 변화한종전 - 기존종전;    

        },
        하이브리드종전변화계산(스탯변화량){
            const 순물공 = this.순수물리공격력계산().순물공;
            const 총물공 = this.순수물리공격력계산().총물공;
            const 순마공 = this.순수마법공격력계산().순마공;
            const 총마공 = this.순수마법공격력계산().총마공;
            const 공속 = this.공속 || 0;
            const 코어공격력 = this.코어공격력 || 0;
            const 물공 = this.물공 || 0;
            const 마공 = this.마공 || 0;
            const 물치피 = this.물치피 || 0;
            const 마치피 = this.마치피 || 0;
            const 위개뎀 = this.위개뎀 || 0;
            const 에피증 = this.에피증 || 0;
            const 백피증 = this.백피증 || 0;
            const 체피증 = this.체피증 || 0;
            const 에치피 = this.에치피 || 0;
            const 백치피 = this.백치피 || 0;
            const 체치피 = this.체치피 || 0;
            const 쿨감 = this.쿨감 || 0;
            const 캐릭터 = this.캐릭터 || 0;

            const 스탯변화량_공속 = 스탯변화량.공속 || 0;
            const 스탯변화량_물공 = 스탯변화량.물공 || 0;
            const 스탯변화량_총물공 = 스탯변화량.총물공 || 0;
            const 스탯변화량_마공 = 스탯변화량.마공 || 0;
            const 스탯변화량_총마공 = 스탯변화량.총마공 || 0;
            const 스탯변화량_물치피 = 스탯변화량.물치피 || 0;
            const 스탯변화량_마치피 = 스탯변화량.마치피 || 0;
            const 스탯변화량_위개뎀 = 스탯변화량.위개뎀 || 0;
            const 스탯변화량_에피증 = 스탯변화량.에피증 || 0;
            const 스탯변화량_백피증 = 스탯변화량.백피증 || 0;
            const 스탯변화량_체피증 = 스탯변화량.체피증 || 0;
            const 스탯변화량_에치피 = 스탯변화량.에치피 || 0;
            const 스탯변화량_백치피 = 스탯변화량.백치피 || 0;
            const 스탯변화량_체치피 = 스탯변화량.체치피 || 0;
            const 스탯변화량_쿨감 = 스탯변화량.쿨감 || 0;

            const 기존종전 = this.하이브리드종합전투력계산({
                공속: 공속,
                물공: 물공,
                마공: 마공,
                물치피: 물치피,
                마치피: 마치피,
                위개뎀: 위개뎀,
                에피증: 에피증,
                백피증: 백피증,
                체피증: 체피증,
                에치피: 에치피,
                백치피: 백치피,
                체치피: 체치피,
                쿨감: 쿨감
            }, 캐릭터);
            let 변화한종전 = 0;
            if (캐릭터 === "서유리"){
                // 물리 공격력과 물리 치명타 피해량의 30%만큼 마법 공격력과 마법 치명타 피해량에 더해지고 
                // 마법 공격력과 마법 치명타 피해량의 30%만큼 물리 공격력과 물리 치명타 피해량에 더해진다.

                const 총물공 = this.서유리순수물리공격력계산().총물공;
                const 보정전순물공 = this.서유리순수물리공격력계산().보정전순물공;
                const 총마공 = this.서유리순수마법공격력계산().총마공;
                const 보정전순마공 = this.서유리순수마법공격력계산().보정전순마공;

                const 보정전물공 = 코어공격력 + (보정전순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100);
                const 보정전마공 = 코어공격력 + (보정전순마공 + 스탯변화량_마공) * (1 + (총마공 + 스탯변화량_총마공) / 100);
                const 보정전물치피 = (물치피 - 0.3 * 마치피) / 0.91;
                const 보정전마치피 = (마치피 - 0.3 * 물치피) / 0.91;

                변화한종전 = this.하이브리드종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 보정전물공 + 보정전마공 * 0.3,
                    마공: 보정전마공 + 보정전물공 * 0.3,
                    물치피: (보정전물치피 + 스탯변화량_물치피) + (보정전마치피 + 스탯변화량_마치피) * 0.3,
                    마치피: (보정전마치피 + 스탯변화량_마치피) + (보정전물치피 + 스탯변화량_물치피) * 0.3,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);

            } else if (캐릭터 === "파이"){
                // 에어리얼 시 피해량 증가 / 백어택 시 피해량 증가 / 체이스 시 피해량 증가 능력치의 30% 만큼 
                // 각각 에어리얼 시 치명타 피해량 / 백어택 시 치명타 피해량 / 체이스시 치명타 피해량 능력치에 더해진다.

                const 에피증변화량 = 곱연산(에피증, 스탯변화량_에피증) - 에피증;
                const 백피증변화량 = 곱연산(백피증, 스탯변화량_백피증) - 백피증;
                const 체피증변화량 = 곱연산(체피증, 스탯변화량_체피증) - 체피증;
                변화한종전 = this.하이브리드종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 코어공격력 + (순마공 + 스탯변화량_마공) * (1 + (총마공 + 스탯변화량_총마공) / 100),
                    물치피: 물치피 + 스탯변화량_물치피,
                    마치피: 마치피 + 스탯변화량_마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피 + 에피증변화량 * 0.3,
                    백치피: 백치피 + 스탯변화량_백치피 + 백피증변화량 * 0.3,
                    체치피: 체치피 + 스탯변화량_체치피 + 체피증변화량 * 0.3,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);
            } else {
                변화한종전 = this.하이브리드종합전투력계산({
                    공속: 곱연산(공속, 스탯변화량_공속),
                    물공: 코어공격력 + (순물공 + 스탯변화량_물공) * (1 + (총물공 + 스탯변화량_총물공) / 100),
                    마공: 코어공격력 + (순마공 + 스탯변화량_마공) * (1 + (총마공 + 스탯변화량_총마공) / 100),
                    물치피: 물치피 + 스탯변화량_물치피,
                    마치피: 마치피 + 스탯변화량_마치피,
                    위개뎀: 곱연산(위개뎀, 스탯변화량_위개뎀),
                    에피증: 곱연산(에피증, 스탯변화량_에피증),
                    백피증: 곱연산(백피증, 스탯변화량_백피증),
                    체피증: 곱연산(체피증, 스탯변화량_체피증),
                    에치피: 에치피 + 스탯변화량_에치피,
                    백치피: 백치피 + 스탯변화량_백치피,
                    체치피: 체치피 + 스탯변화량_체치피,
                    쿨감: 곱연산(쿨감, 스탯변화량_쿨감)
                }, 캐릭터);
            }
            return 변화한종전 - 기존종전;
        },

        순수물리공격력계산(){
            const 물공 = this.물공 - this.코어공격력;
            const 하락한물공퍼센트 = this.하락한물공퍼센트;
            const 하락한물공 = this.하락한물공 - this.코어공격력;

            const 총물공 = (100 * (하락한물공-물공) + 물공 * 하락한물공퍼센트) / (물공 - 하락한물공);
            const 순물공 = 물공 / (1 + 총물공 / 100);
            
            return {
                순물공: 순물공 || 0,
                총물공: 총물공 || 0
            }
        },
        순수마법공격력계산(){
            const 마공 = this.마공 - this.코어공격력;
            const 하락한마공퍼센트 = this.하락한마공퍼센트;
            const 하락한마공 = this.하락한마공 - this.코어공격력;

            const 총마공 = (100 * (하락한마공-마공) + 마공 * 하락한마공퍼센트) / (마공 - 하락한마공);
            const 순마공 = 마공 / (1 + 총마공 / 100);
            
            return {
                순마공: 순마공 || 0,
                총마공: 총마공 || 0
            }
        },
        서유리순수물리공격력계산(){
            const 보정전물공 = ((this.물공) - 0.3 * (this.마공)) / 0.91 - this.코어공격력;
            const 하락한물공퍼센트 = this.하락한물공퍼센트;
            const 하락한물공 = this.하락한물공;
            const 하락한마공 = this.하락한마공;
            const 하락한보정전물공 =  (하락한물공 - 0.3 * 하락한마공) / 0.91 - this.코어공격력;
            const 총물공 = (100 * (하락한보정전물공 - 보정전물공) + 보정전물공 * 하락한물공퍼센트) / (보정전물공 - 하락한보정전물공);
            const 보정전순물공 = 보정전물공 / (1 + 총물공 / 100);

            return {
                보정전순물공: 보정전순물공 || 0,
                총물공: 총물공 || 0
            };
        },
        서유리순수마법공격력계산(){
            const 보정전마공 = ((this.마공) - 0.3 * (this.물공)) / 0.91 - this.코어공격력;
            const 하락한물공퍼센트 = this.하락한물공퍼센트;
            const 하락한마공 = this.하락한마공;
            const 하락한물공 = this.하락한물공;
            const 하락한보정전마공 =  (하락한마공 - 0.3 * 하락한물공) / 0.91 - this.코어공격력;
            const 총마공 = (100 * (하락한보정전마공 - 보정전마공) + 보정전마공 * 하락한물공퍼센트) / (보정전마공 - 하락한보정전마공);
            const 보정전순마공 = 보정전마공 / (1 + 총마공 / 100);

            return {
                보정전순마공: 보정전순마공 || 0,
                총마공: 총마공 || 0
            };
        },
        물리데미지계산(){
            const 뎀감 = this.뎀감 || 0;
            const 치피감 = this.치피감 || 0;
            const 스킬계수 = this.스킬계수 || 0;
            const 물공 = this.물공 || 0;
            const 물치피 = this.물치피 || 0;
            const 에치피 = this.에치피 || 0;
            const 백치피 = this.백치피 || 0;
            const 체치피 = this.체치피 || 0;
            const 위개뎀 = this.위개뎀 || 0;
            const 에피증 = this.에피증 || 0;
            const 백피증 = this.백피증 || 0;
            const 체피증 = this.체피증 || 0;
            const 공통피증 = (this.타입피증 || 0) + (this.주는피해량 || 0) + (this.주는물리피해량 || 0);
            const 받피증 = this.받는피해량 || 0;
            
            const 공통 = 물공 * (1 - 뎀감 / 100) * (스킬계수 / 100) * (1 + 받피증 / 100);


            const 정면 = 공통 * (1 + ((물치피 - 치피감) > 0 ? (물치피 - 치피감) : 0) / 100) * (1 + 공통피증 / 100);

            const 에 = 공통 * (1 + ((물치피 + 에치피 - 치피감) > 0 ? (물치피 + 에치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증) / 100);
            const 백 = 공통 * (1 + ((물치피 + 백치피 - 치피감) > 0 ? (물치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 백피증) / 100);
            const 체 = 공통 * (1 + ((물치피 + 체치피 - 치피감) > 0 ? (물치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 체피증) / 100);

            const 에백 = 공통 * (1 + ((물치피 + 에치피 + 백치피 - 치피감) > 0 ? (물치피 + 에치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증 + 백피증) / 100);
            const 에체 = 공통 * (1 + ((물치피 + 에치피 + 체치피 - 치피감) > 0 ? (물치피 + 에치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증 + 체피증) / 100);
            const 백체 = 공통 * (1 + ((물치피 + 백치피 + 체치피 - 치피감) > 0 ? (물치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 백피증 + 체피증) / 100);

            const 에백체 = 공통 * (1 + (물치피 + 에치피 + 백치피 + 체치피 - 치피감 > 0 ? 물치피 + 에치피 + 백치피 + 체치피 - 치피감 : 0) / 100) * (1 + (공통피증 + 에피증 + 백피증 + 체피증) / 100);


            const 위 = 공통 * (1 + ((물치피 - 치피감) > 0 ? (물치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀) / 100);

            const 위에 = 공통 * (1 + ((물치피 + 에치피 - 치피감) > 0 ? (물치피 + 에치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증) / 100);
            const 위백 = 공통 * (1 + ((물치피 + 백치피 - 치피감) > 0 ? (물치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 백피증) / 100);
            const 위체 = 공통 * (1 + ((물치피 + 체치피 - 치피감) > 0 ? (물치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 체피증) / 100);

            const 위에백 = 공통 * (1 + ((물치피 + 에치피 + 백치피 - 치피감) > 0 ? (물치피 + 에치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 백피증) / 100);
            const 위에체 = 공통 * (1 + ((물치피 + 에치피 + 체치피 - 치피감) > 0 ? (물치피 + 에치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 체피증) / 100);
            const 위백체 = 공통 * (1 + ((물치피 + 백치피 + 체치피 - 치피감) > 0 ? (물치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 백피증 + 체피증) / 100);

            const 위에백체 = 공통 * (1 + ((물치피 + 에치피 + 백치피 + 체치피 - 치피감) > 0 ? (물치피 + 에치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 백피증 + 체피증) / 100);

            return{
                정면: 정면,
                에: 에,
                백: 백,
                체: 체,
                에백: 에백,
                에체: 에체,
                백체: 백체,
                에백체: 에백체,
                위: 위,
                위에: 위에,
                위백: 위백,
                위체: 위체,
                위에백: 위에백,
                위에체: 위에체,
                위백체: 위백체,
                위에백체: 위에백체
            }
        },        
        마법데미지계산(){
            const 뎀감 = this.뎀감 || 0;
            const 치피감 = this.치피감 || 0;
            const 스킬계수 = this.스킬계수 || 0;
            const 마공 = this.마공 || 0;
            const 마치피 = this.마치피 || 0;
            const 에치피 = this.에치피 || 0;
            const 백치피 = this.백치피 || 0;
            const 체치피 = this.체치피 || 0;
            const 위개뎀 = this.위개뎀 || 0;
            const 에피증 = this.에피증 || 0;
            const 백피증 = this.백피증 || 0;
            const 체피증 = this.체피증 || 0;
            const 공통피증 = (this.타입피증 || 0) + (this.주는피해량 || 0) + (this.주는마법피해량 || 0);
            const 받피증 = this.받는피해량 || 0;
            
            const 공통 = 마공 * (1 - 뎀감 / 100) * (스킬계수 / 100) * (1 + 받피증 / 100);


            const 정면 = 공통 * (1 + ((마치피 - 치피감) > 0 ? (마치피 - 치피감) : 0) / 100) * (1 + 공통피증 / 100);

            const 에 = 공통 * (1 + ((마치피 + 에치피 - 치피감) > 0 ? (마치피 + 에치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증) / 100);
            const 백 = 공통 * (1 + ((마치피 + 백치피 - 치피감) > 0 ? (마치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 백피증) / 100);
            const 체 = 공통 * (1 + ((마치피 + 체치피 - 치피감) > 0 ? (마치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 체피증) / 100);

            const 에백 = 공통 * (1 + ((마치피 + 에치피 + 백치피 - 치피감) > 0 ? (마치피 + 에치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증 + 백피증) / 100);
            const 에체 = 공통 * (1 + ((마치피 + 에치피 + 체치피 - 치피감) > 0 ? (마치피 + 에치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증 + 체피증) / 100);
            const 백체 = 공통 * (1 + ((마치피 + 백치피 + 체치피 - 치피감) > 0 ? (마치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 백피증 + 체피증) / 100);

            const 에백체 = 공통 * (1 + ((마치피 + 에치피 + 백치피 + 체치피 - 치피감) > 0 ? (마치피 + 에치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 에피증 + 백피증 + 체피증) / 100);


            const 위 = 공통 * (1 + ((마치피 - 치피감) > 0 ? (마치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀) / 100);

            const 위에 = 공통 * (1 + ((마치피 + 에치피 - 치피감) > 0 ? (마치피 + 에치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증) / 100);
            const 위백 = 공통 * (1 + ((마치피 + 백치피 - 치피감) > 0 ? (마치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 백피증) / 100);
            const 위체 = 공통 * (1 + ((마치피 + 체치피 - 치피감) > 0 ? (마치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 체피증) / 100);

            const 위에백 = 공통 * (1 + ((마치피 + 에치피 + 백치피 - 치피감) > 0 ? (마치피 + 에치피 + 백치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 백피증) / 100);
            const 위에체 = 공통 * (1 + ((마치피 + 에치피 + 체치피 - 치피감) > 0 ? (마치피 + 에치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 체피증) / 100);
            const 위백체 = 공통 * (1 + ((마치피 + 백치피 + 체치피 - 치피감) > 0 ? (마치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 백피증 + 체피증) / 100);

            const 위에백체 = 공통 * (1 + ((마치피 + 에치피 + 백치피 + 체치피 - 치피감) > 0 ? (마치피 + 에치피 + 백치피 + 체치피 - 치피감) : 0) / 100) * (1 + (공통피증 + 위개뎀 + 에피증 + 백피증 + 체피증) / 100);

            return{
                정면: 정면,
                에: 에,
                백: 백,
                체: 체,
                에백: 에백,
                에체: 에체,
                백체: 백체,
                에백체: 에백체,
                위: 위,
                위에: 위에,
                위백: 위백,
                위체: 위체,
                위에백: 위에백,
                위에체: 위에체,
                위백체: 위백체,
                위에백체: 위에백체
            }
        }

    }
})